apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "projects.fullname" . }}
  labels:
    {{- include "projects.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "projects.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "projects.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio
                  key: secretkey
            - name: MINIO_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cfgs
                  key: MINIO_HOST
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cfgs
                  key: MINIO_ENDPOINT
            - name: MONGO_DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cfgs
                  key: MONGO_PROJECTS_URL
            - name: MONGO_USER
              value: "root"
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongodb
                  key: mongodb-root-password
         
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          {{- end }}
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
            initialDelaySeconds: 15
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
